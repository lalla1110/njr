#include<stdio.h>
#include<pthread.h>
#include<unistd.h>
void fun1(void);
void fun2(void);
pthread_mutex_t first_mutex, second_mutex;
int main()
{
pthread_mutex_init(&first_mutex,NULL);
pthread_mutex_init(&second_mutex,NULL);
pthread_t t1,t2;
pthread_create(&t1,NULL,fun1,NULL);
pthread_create(&t2,NULL,fun2,NULL);
pthread_join(t1,NULL);
pthread_join(t2,NULL);
printf("Thread joined\n");
return 0;
}
void fun1(void){
printf("t1 Trying to acquire first mutex\n");
pthread_mutex_lock(&first_mutex);
printf("t1 First mutex acquired\n");
sleep(1);
printf("t1 Trying to acquire second mutex\n");
pthread_mutex_lock(&second_mutex);
printf("t1 Second mutex acquired\n");
pthread_mutex_unlock(&first_mutex);
}
void fun2(void){
printf("t2 Trying to acquire second mutex\n");
pthread_mutex_lock(&second_mutex);
printf("t2 Second mutex acquired\n");
sleep(1); 
printf("t2 Trying to acquire second mutex\n");
pthread_mutex_lock(&second_mutex);
printf("t2 Second mutex acquired\n");
pthread_mutex_unlock(&first_mutex);
}